// DailyPlanLineupsUploadSet.cpp : implementation file
//

#include "stdafx.h"


#include "csda.h"
#include "DailyPlanLineupsUploadSet.h"

#ifdef _DEBUG
#define new DEBUG_NEW
#undef THIS_FILE
static char THIS_FILE[] = __FILE__;
#endif

/////////////////////////////////////////////////////////////////////////////
// CDailyPlanLineupsUploadSet

IMPLEMENT_DYNAMIC(CDailyPlanLineupsUploadSet, CRecordset)

CDailyPlanLineupsUploadSet::CDailyPlanLineupsUploadSet(CDatabase* pdb)
	: CRecordset(pdb)
{
	//{{AFX_FIELD_INIT(CDailyPlanLineupsUploadSet)
	m_DESC_UNIT_STATUS_TAB_KEY = _T("");
	m_DESC_UNIT_TAB_STATUS_KEY = _T("");
	m_ELEMENT_SYMBOL = _T("");
	m_FP_M_ORDER_NO = _T("");
	m_LIQUIDOUS_TEMP_C = 0;
	m_LU_RECORD_TYPE = _T("");
	m_MILL_ORDER_NO = 0;
	m_MORD_ORDERED_SPEC_WITH_DASHES = _T("");
	m_PLAN_CAST_SEQUENCE_NO = 0;
	m_PLAN_CAST_UNIT_CODE = _T("");
	m_PLAN_CAST_UNIT_CODE_FULL = 0;
	m_PLAN_CASTER_STRAND_NO = _T("");
	m_PLAN_DELETE_DATE = 0;
	m_PLAN_DELETE_TIME = 0;
	m_PLAN_EXPOSURE_CODE = _T("");
	m_PLAN_HEAT_BACKUP_MOLD_CODE = 0;
	m_PLAN_HEAT_EARLY_START_DATE = 0;
	m_PLAN_HEAT_EARLY_START_TIME = 0;
	m_PLAN_HEAT_GROUP = 0;
	m_PLAN_HEAT_LATEST_END_DATE = 0;
	m_PLAN_HEAT_LATEST_END_TIME = 0;
	m_PLAN_HEAT_SEQUENCE_NO = 0;
	m_PLAN_HEAT_SPEC_WITH_DASHES = _T("");
	m_PLAN_HEAT_STATUS_CODE = _T("");
	m_PLAN_HEAT_TAB_NUMBER = 0;
	m_PLAN_HOT_MILL = 0;
	m_PLAN_LINEUP_COMMENTS = _T("");
	m_PLAN_LOT_DISP_CODE = 0;
	m_PLAN_LOT_NUMBER = 0;
	m_PLAN_LOT_SPEC_WITH_DASHES = _T("");
	m_PLAN_LOT_STL_EARLY_START_DATE = 0;
	m_PLAN_LOT_STL_EARLY_START_TIME = 0;
	m_PLAN_LOT_STL_LATEST_END_DATE = 0;
	m_PLAN_LOT_STL_LATEST_END_TIME = 0;
	m_PLAN_LOT_TYPE_SLIT_CODE = _T("");
	m_PLAN_MAX_SLAB_LENGTH_MM = 0;
	m_PLAN_MIN_SLAB_LENGTH_MM = 0;
	m_PLAN_NUMBER_OF_PIECES = 0;
	m_PLAN_SLAB_CONDITION_CD = 0;
	m_PLAN_STEEL_LENGTH_MM = 0;
	m_PLAN_STEEL_THICKNESS_MM = 0;
	m_PLAN_STEEL_WIDTH_MM = 0;
	m_PLAN_STRING_EARLY_START_DATE = 0;
	m_PLAN_STRING_EARLY_START_TIME = 0;
	m_PLAN_STRING_ID = 0;
	m_PLAN_STRING_LATEST_END_DATE = 0;
	m_PLAN_STRING_LATEST_END_TIME = 0;
	m_PLAN_WEEK = 0;
	m_RECORD_DESCRIPTOR = _T("");
	m_REQUIRED_QUALITY_POINTS = 0;
	m_SM_SPEC_CHEM_GRP_ELMNT_AIM_PCT = _T("");
	m_SM_SPEC_CHEM_GRP_ELMNT_MAX_PCT = _T("");
	m_SM_SPEC_CHEM_GRP_ELMNT_MIN_PCT = _T("");
	m_SOLIDOUS_TEMP_C = 0;
	m_nFields = 54;
	//}}AFX_FIELD_INIT
	m_nDefaultType = dynaset;
}


CString CDailyPlanLineupsUploadSet::GetDefaultConnect()
{
	return _T("ODBC;DSN=DPATest");
}

CString CDailyPlanLineupsUploadSet::GetDefaultSQL()
{
	return _T("[CSDA_DAILY_PLAN_LINEUPS]");
}

void CDailyPlanLineupsUploadSet::DoFieldExchange(CFieldExchange* pFX)
{
	//{{AFX_FIELD_MAP(CDailyPlanLineupsUploadSet)
	pFX->SetFieldType(CFieldExchange::outputColumn);
	RFX_Text(pFX, _T("[DESC_UNIT_STATUS_TAB_KEY]"), m_DESC_UNIT_STATUS_TAB_KEY);
	RFX_Text(pFX, _T("[DESC_UNIT_TAB_STATUS_KEY]"), m_DESC_UNIT_TAB_STATUS_KEY);
	RFX_Text(pFX, _T("[ELEMENT_SYMBOL]"), m_ELEMENT_SYMBOL);
	RFX_Text(pFX, _T("[FP_M_ORDER_NO]"), m_FP_M_ORDER_NO);
	RFX_Long(pFX, _T("[LIQUIDOUS_TEMP_C]"), m_LIQUIDOUS_TEMP_C);
	RFX_Text(pFX, _T("[LU_RECORD_TYPE]"), m_LU_RECORD_TYPE);
	RFX_Long(pFX, _T("[MILL_ORDER_NO]"), m_MILL_ORDER_NO);
	RFX_Text(pFX, _T("[MORD_ORDERED_SPEC_WITH_DASHES]"), m_MORD_ORDERED_SPEC_WITH_DASHES);
	RFX_Long(pFX, _T("[PLAN_CAST_SEQUENCE_NO]"), m_PLAN_CAST_SEQUENCE_NO);
	RFX_Text(pFX, _T("[PLAN_CAST_UNIT_CODE]"), m_PLAN_CAST_UNIT_CODE);
	RFX_Long(pFX, _T("[PLAN_CAST_UNIT_CODE_FULL]"), m_PLAN_CAST_UNIT_CODE_FULL);
	RFX_Text(pFX, _T("[PLAN_CASTER_STRAND_NO]"), m_PLAN_CASTER_STRAND_NO);
	RFX_Long(pFX, _T("[PLAN_DELETE_DATE]"), m_PLAN_DELETE_DATE);
	RFX_Long(pFX, _T("[PLAN_DELETE_TIME]"), m_PLAN_DELETE_TIME);
	RFX_Text(pFX, _T("[PLAN_EXPOSURE_CODE]"), m_PLAN_EXPOSURE_CODE);
	RFX_Long(pFX, _T("[PLAN_HEAT_BACKUP_MOLD_CODE]"), m_PLAN_HEAT_BACKUP_MOLD_CODE);
	RFX_Long(pFX, _T("[PLAN_HEAT_EARLY_START_DATE]"), m_PLAN_HEAT_EARLY_START_DATE);
	RFX_Long(pFX, _T("[PLAN_HEAT_EARLY_START_TIME]"), m_PLAN_HEAT_EARLY_START_TIME);
	RFX_Long(pFX, _T("[PLAN_HEAT_GROUP]"), m_PLAN_HEAT_GROUP);
	RFX_Long(pFX, _T("[PLAN_HEAT_LATEST_END_DATE]"), m_PLAN_HEAT_LATEST_END_DATE);
	RFX_Long(pFX, _T("[PLAN_HEAT_LATEST_END_TIME]"), m_PLAN_HEAT_LATEST_END_TIME);
	RFX_Long(pFX, _T("[PLAN_HEAT_SEQUENCE_NO]"), m_PLAN_HEAT_SEQUENCE_NO);
	RFX_Text(pFX, _T("[PLAN_HEAT_SPEC_WITH_DASHES]"), m_PLAN_HEAT_SPEC_WITH_DASHES);
	RFX_Text(pFX, _T("[PLAN_HEAT_STATUS_CODE]"), m_PLAN_HEAT_STATUS_CODE);
	RFX_Long(pFX, _T("[PLAN_HEAT_TAB_NUMBER]"), m_PLAN_HEAT_TAB_NUMBER);
	RFX_Long(pFX, _T("[PLAN_HOT_MILL]"), m_PLAN_HOT_MILL);
	RFX_Text(pFX, _T("[PLAN_LINEUP_COMMENTS]"), m_PLAN_LINEUP_COMMENTS);
	RFX_Long(pFX, _T("[PLAN_LOT_DISP_CODE]"), m_PLAN_LOT_DISP_CODE);
	RFX_Long(pFX, _T("[PLAN_LOT_NUMBER]"), m_PLAN_LOT_NUMBER);
	RFX_Text(pFX, _T("[PLAN_LOT_SPEC_WITH_DASHES]"), m_PLAN_LOT_SPEC_WITH_DASHES);
	RFX_Long(pFX, _T("[PLAN_LOT_STL_EARLY_START_DATE]"), m_PLAN_LOT_STL_EARLY_START_DATE);
	RFX_Long(pFX, _T("[PLAN_LOT_STL_EARLY_START_TIME]"), m_PLAN_LOT_STL_EARLY_START_TIME);
	RFX_Long(pFX, _T("[PLAN_LOT_STL_LATEST_END_DATE]"), m_PLAN_LOT_STL_LATEST_END_DATE);
	RFX_Long(pFX, _T("[PLAN_LOT_STL_LATEST_END_TIME]"), m_PLAN_LOT_STL_LATEST_END_TIME);
	RFX_Text(pFX, _T("[PLAN_LOT_TYPE_SLIT_CODE]"), m_PLAN_LOT_TYPE_SLIT_CODE);
	RFX_Long(pFX, _T("[PLAN_MAX_SLAB_LENGTH_MM]"), m_PLAN_MAX_SLAB_LENGTH_MM);
	RFX_Long(pFX, _T("[PLAN_MIN_SLAB_LENGTH_MM]"), m_PLAN_MIN_SLAB_LENGTH_MM);
	RFX_Long(pFX, _T("[PLAN_NUMBER_OF_PIECES]"), m_PLAN_NUMBER_OF_PIECES);
	RFX_Long(pFX, _T("[PLAN_SLAB_CONDITION_CD]"), m_PLAN_SLAB_CONDITION_CD);
	RFX_Long(pFX, _T("[PLAN_STEEL_LENGTH_MM]"), m_PLAN_STEEL_LENGTH_MM);
	RFX_Long(pFX, _T("[PLAN_STEEL_THICKNESS_MM]"), m_PLAN_STEEL_THICKNESS_MM);
	RFX_Long(pFX, _T("[PLAN_STEEL_WIDTH_MM]"), m_PLAN_STEEL_WIDTH_MM);
	RFX_Long(pFX, _T("[PLAN_STRING_EARLY_START_DATE]"), m_PLAN_STRING_EARLY_START_DATE);
	RFX_Long(pFX, _T("[PLAN_STRING_EARLY_START_TIME]"), m_PLAN_STRING_EARLY_START_TIME);
	RFX_Long(pFX, _T("[PLAN_STRING_ID]"), m_PLAN_STRING_ID);
	RFX_Long(pFX, _T("[PLAN_STRING_LATEST_END_DATE]"), m_PLAN_STRING_LATEST_END_DATE);
	RFX_Long(pFX, _T("[PLAN_STRING_LATEST_END_TIME]"), m_PLAN_STRING_LATEST_END_TIME);
	RFX_Long(pFX, _T("[PLAN_WEEK]"), m_PLAN_WEEK);
	RFX_Text(pFX, _T("[RECORD_DESCRIPTOR]"), m_RECORD_DESCRIPTOR);
	RFX_Long(pFX, _T("[REQUIRED_QUALITY_POINTS]"), m_REQUIRED_QUALITY_POINTS);
	RFX_Text(pFX, _T("[SM_SPEC_CHEM_GRP_ELMNT_AIM_PCT]"), m_SM_SPEC_CHEM_GRP_ELMNT_AIM_PCT);
	RFX_Text(pFX, _T("[SM_SPEC_CHEM_GRP_ELMNT_MAX_PCT]"), m_SM_SPEC_CHEM_GRP_ELMNT_MAX_PCT);
	RFX_Text(pFX, _T("[SM_SPEC_CHEM_GRP_ELMNT_MIN_PCT]"), m_SM_SPEC_CHEM_GRP_ELMNT_MIN_PCT);
	RFX_Long(pFX, _T("[SOLIDOUS_TEMP_C]"), m_SOLIDOUS_TEMP_C);
	//}}AFX_FIELD_MAP
}


#if 0
	pFX->SetFieldType(CFieldExchange::outputColumn);
	RFX_Text(pFX, _T("[LU_RECORD_TYPE]"), m_LU_RECORD_TYPE);
	RFX_Text(pFX, _T("[PLAN_HEAT_STATUS_CODE]"), m_PLAN_HEAT_STATUS_CODE);
	RFX_Text(pFX, _T("[RECORD_DESCRIPTOR]"), m_RECORD_DESCRIPTOR);
	RFX_Long(pFX, _T("[PLAN_WEEK]"), m_PLAN_WEEK);
	RFX_Long(pFX, _T("[PLAN_CAST_SEQUENCE_NO]"), m_PLAN_CAST_SEQUENCE_NO);
	RFX_Long(pFX, _T("[PLAN_STRING_ID]"), m_PLAN_STRING_ID);
	RFX_Long(pFX, _T("[PLAN_HEAT_SEQUENCE_NO]"), m_PLAN_HEAT_SEQUENCE_NO);
	RFX_Long(pFX, _T("[PLAN_STRING_EARLY_START_DATE]"), m_PLAN_STRING_EARLY_START_DATE);
	RFX_Long(pFX, _T("[PLAN_STRING_EARLY_START_TIME]"), m_PLAN_STRING_EARLY_START_TIME);
	RFX_Long(pFX, _T("[PLAN_STRING_LATEST_END_DATE]"), m_PLAN_STRING_LATEST_END_DATE);
	RFX_Long(pFX, _T("[PLAN_STRING_LATEST_END_TIME]"), m_PLAN_STRING_LATEST_END_TIME);
	RFX_Long(pFX, _T("[PLAN_HEAT_GROUP]"), m_PLAN_HEAT_GROUP);
	RFX_Long(pFX, _T("[PLAN_CAST_UNIT_CODE_FULL]"), m_PLAN_CAST_UNIT_CODE_FULL);
	RFX_Long(pFX, _T("[PLAN_HEAT_TAB_NUMBER]"), m_PLAN_HEAT_TAB_NUMBER);
	RFX_Text(pFX, _T("[PLAN_HEAT_SPEC_WITH_DASHES]"), m_PLAN_HEAT_SPEC_WITH_DASHES);
	RFX_Text(pFX, _T("[PLAN_LINEUP_COMMENTS]"), m_PLAN_LINEUP_COMMENTS);
	RFX_Text(pFX, _T("[ELEMENT_SYMBOL]"), m_ELEMENT_SYMBOL);
	RFX_Text(pFX, _T("[SM_SPEC_CHEM_GRP_ELMNT_AIM_PCT]"), m_SM_SPEC_CHEM_GRP_ELMNT_AIM_PCT);
	RFX_Text(pFX, _T("[SM_SPEC_CHEM_GRP_ELMNT_MIN_PCT]"), m_SM_SPEC_CHEM_GRP_ELMNT_MIN_PCT);
	RFX_Text(pFX, _T("[SM_SPEC_CHEM_GRP_ELMNT_MAX_PCT]"), m_SM_SPEC_CHEM_GRP_ELMNT_MAX_PCT);
	RFX_Long(pFX, _T("[PLAN_HEAT_BACKUP_MOLD_CODE]"), m_PLAN_HEAT_BACKUP_MOLD_CODE);
	RFX_Long(pFX, _T("[LIQUIDOUS_TEMP_C]"), m_LIQUIDOUS_TEMP_C);
	RFX_Long(pFX, _T("[SOLIDOUS_TEMP_C]"), m_SOLIDOUS_TEMP_C);
	RFX_Long(pFX, _T("[PLAN_HEAT_EARLY_START_DATE]"), m_PLAN_HEAT_EARLY_START_DATE);
	RFX_Long(pFX, _T("[PLAN_HEAT_EARLY_START_TIME]"), m_PLAN_HEAT_EARLY_START_TIME);
	RFX_Long(pFX, _T("[PLAN_HEAT_LATEST_END_DATE]"), m_PLAN_HEAT_LATEST_END_DATE);
	RFX_Long(pFX, _T("[PLAN_HEAT_LATEST_END_TIME]"), m_PLAN_HEAT_LATEST_END_TIME);
	RFX_Long(pFX, _T("[PLAN_LOT_NUMBER]"), m_PLAN_LOT_NUMBER);
	RFX_Text(pFX, _T("[PLAN_CASTER_STRAND_NO]"), m_PLAN_CASTER_STRAND_NO);
	RFX_Long(pFX, _T("[PLAN_NUMBER_OF_PIECES]"), m_PLAN_NUMBER_OF_PIECES);
	RFX_Text(pFX, _T("[PLAN_LOT_SPEC_WITH_DASHES]"), m_PLAN_LOT_SPEC_WITH_DASHES);
	RFX_Long(pFX, _T("[PLAN_SLAB_CONDITION_CD]"), m_PLAN_SLAB_CONDITION_CD);
	RFX_Text(pFX, _T("[PLAN_EXPOSURE_CODE]"), m_PLAN_EXPOSURE_CODE);
	RFX_Long(pFX, _T("[PLAN_LOT_DISP_CODE]"), m_PLAN_LOT_DISP_CODE);
	RFX_Long(pFX, _T("[PLAN_STEEL_WIDTH_MM]"), m_PLAN_STEEL_WIDTH_MM);
	RFX_Long(pFX, _T("[PLAN_STEEL_THICKNESS_MM]"), m_PLAN_STEEL_THICKNESS_MM);
	RFX_Long(pFX, _T("[PLAN_STEEL_LENGTH_MM]"), m_PLAN_STEEL_LENGTH_MM);
	RFX_Long(pFX, _T("[PLAN_HOT_MILL]"), m_PLAN_HOT_MILL);
	RFX_Long(pFX, _T("[REQUIRED_QUALITY_POINTS]"), m_REQUIRED_QUALITY_POINTS);
	RFX_Long(pFX, _T("[PLAN_MIN_SLAB_LENGTH_MM]"), m_PLAN_MIN_SLAB_LENGTH_MM);
	RFX_Long(pFX, _T("[PLAN_MAX_SLAB_LENGTH_MM]"), m_PLAN_MAX_SLAB_LENGTH_MM);
	RFX_Text(pFX, _T("[MORD_ORDERED_SPEC_WITH_DASHES]"), m_MORD_ORDERED_SPEC_WITH_DASHES);
	RFX_Long(pFX, _T("[PLAN_LOT_STL_EARLY_START_DATE]"), m_PLAN_LOT_STL_EARLY_START_DATE);
	RFX_Long(pFX, _T("[PLAN_LOT_STL_EARLY_START_TIME]"), m_PLAN_LOT_STL_EARLY_START_TIME);
	RFX_Long(pFX, _T("[PLAN_LOT_STL_LATEST_END_DATE]"), m_PLAN_LOT_STL_LATEST_END_DATE);
	RFX_Long(pFX, _T("[PLAN_LOT_STL_LATEST_END_TIME]"), m_PLAN_LOT_STL_LATEST_END_TIME);
	RFX_Long(pFX, _T("[MILL_ORDER_NO]"), m_MILL_ORDER_NO);
	RFX_Text(pFX, _T("[PLAN_LOT_TYPE_SLIT_CODE]"), m_PLAN_LOT_TYPE_SLIT_CODE);
	RFX_Long(pFX, _T("[PLAN_DELETE_DATE]"), m_PLAN_DELETE_DATE);
	RFX_Long(pFX, _T("[PLAN_DELETE_TIME]"), m_PLAN_DELETE_TIME);
	RFX_Text(pFX, _T("[DESC_UNIT_STATUS_TAB_KEY]"), m_DESC_UNIT_STATUS_TAB_KEY);
	RFX_Text(pFX, _T("[DESC_UNIT_TAB_STATUS_KEY]"), m_DESC_UNIT_TAB_STATUS_KEY);
	RFX_Text(pFX, _T("[PLAN_CAST_UNIT_CODE]"), m_PLAN_CAST_UNIT_CODE);
#endif

/////////////////////////////////////////////////////////////////////////////
// CDailyPlanLineupsUploadSet diagnostics

#ifdef _DEBUG
void CDailyPlanLineupsUploadSet::AssertValid() const
{
	CRecordset::AssertValid();
}

void CDailyPlanLineupsUploadSet::Dump(CDumpContext& dc) const
{
	CRecordset::Dump(dc);
}
#endif //_DEBUG
